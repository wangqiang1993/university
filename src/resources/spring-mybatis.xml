<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描 -->  
    <context:component-scan base-package="com.scu" />  
    <context:component-scan base-package="test" />  
    <!-- 引入配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:resources/jdbc.properties" />  
    </bean>  
  
<!--    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass">
            <value>${dataSource.driverClass}</value>
        </property>
        <property name="jdbcUrl">
            <value>${dataSource.jdbcUrl}</value>
        </property>
        <property name="user">
            <value>${dataSource.user}</value>
        </property>
        <property name="password">
            <value>${dataSource.password}</value>
        </property>
        当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3
        <property name="acquireIncrement">
            <value>${dataSource.acquireIncrement}</value>
        </property>
        初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3
        <property name="initialPoolSize">
            <value>${dataSource.initialPoolSize}</value>
        </property>
        连接池中保留的最大连接数。Default: 15
        <property name="maxPoolSize">
            <value>${dataSource.maxPoolSize}</value>
        </property>
        连接池中保留的最小连接数。
        <property name="minPoolSize">
            <value>${dataSource.minPoolSize}</value>
        </property>
    </bean> -->

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${dataSource.driverClass}" />  
        <property name="url" value="${dataSource.jdbcUrl}" />  
        <property name="username" value="${dataSource.user}" />  
        <property name="password" value="${dataSource.password}" />  
<!--         初始化连接大小   -->
        <property name="initialSize" value="${dataSource.initialPoolSize}"></property>  
<!--         连接池最大数量   -->
        <property name="maxActive" value="${dataSource.maxPoolSize}"></property>  
<!--         连接池最大空闲   -->
        <property name="maxIdle" value="${maxIdle}"></property>  
<!--         连接池最小空闲   -->
        <property name="minIdle" value="${minIdle}"></property>  
<!--         获取连接最大等待时间   -->
        <property name="maxWait" value="${maxWait}"></property>  
    </bean>  
  
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
           
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="test.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
  
</beans>  